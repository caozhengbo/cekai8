"""
Django settings for cekai8 project.

Generated by 'django-admin startproject' using Django 2.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
# BASE_DIR = os.path.dirname(os.path.realpath(__file__))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 't$orpx!xaxwx((-*pia06y212lokv%(+*fxkbiyugg-3kwd1gf'

# SECURITY WARNING: don't run： with debug turned on in production!
# DEBUG = True
DEBUG = False

ALLOWED_HOSTS = ["*"]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'test_user',
    'test_runner'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'test_runner.middlewares.isLoginMiddleware.IsLoginMiddleware',  # 配置中间件
]

ROOT_URLCONF = 'cekai8.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, "autotest_web-master/dist")],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'cekai8.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#     }
# }
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': 'cekai8',
#         'HOST': 'localhost',
#         'USER': 'root',
#         'PASSWORD': 'work199805',
#         'PORT': 3306,
#     }
# }
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'cekai8',
        'HOST': '110.42.184.157',
        'USER': 'root',
        'PASSWORD': 'Work19980506.',
        'PORT': 3306,
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

# STATIC_URL = '/static/'

# 设置vue的静态文件
# STATICFILES_DIRS = [
#    os.path.join(BASE_DIR, "autotest_web-master/dist/static")
# ]

# STATIC_URL = '/static/'
# STATIC_ROOT = os.path.join(BASE_DIR, "collectedstatic")
# STATICFILES_DIRS = [
#     os.path.join(BASE_DIR, "static")
# ]


#
# STATIC_URL = '/static/'
# STATIC_ROOT = os.path.join(BASE_DIR, "collectedstatic")
# STATICFILES_DIRS = [
#     os.path.join(BASE_DIR, "static")
# ]


# BASE_DIR = os.path.dirname(os.path.realpath(__file__))
#
# STATIC_ROOT = '/srv/django/static'
# STATIC_URL = '/static/'
# STATICFILES_DIRS = (
#     os.path.join(BASE_DIR, 'static'),
# )

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, "/static/")  # 使用 collectstatic后收集的静态文件的存放绝对路径
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]  # 存放静态文件的目录，其中也可以包含url
